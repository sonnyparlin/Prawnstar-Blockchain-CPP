[{"/Users/sonnyparlin/Github/pr-blockchain-c/dashboard/src/index.js":"1","/Users/sonnyparlin/Github/pr-blockchain-c/dashboard/src/App.js":"2","/Users/sonnyparlin/Github/pr-blockchain-c/dashboard/src/reportWebVitals.js":"3","/Users/sonnyparlin/Github/pr-blockchain-c/dashboard/src/News.js":"4","/Users/sonnyparlin/Github/pr-blockchain-c/dashboard/src/Console.js":"5","/Users/sonnyparlin/Github/pr-blockchain-c/dashboard/src/Wallet.js":"6","/Users/sonnyparlin/Github/pr-blockchain-c/dashboard/src/Stake.js":"7","/Users/sonnyparlin/Github/pr-blockchain-c/dashboard/src/Transactions.js":"8","/Users/sonnyparlin/Github/pr-blockchain-c/dashboard/src/BuySellTransfer.js":"9"},{"size":325,"mtime":1648846808814,"results":"10","hashOfConfig":"11"},{"size":3175,"mtime":1649025328505,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1648788846498,"results":"13","hashOfConfig":"11"},{"size":3470,"mtime":1648933953283,"results":"14","hashOfConfig":"11"},{"size":945,"mtime":1648951913919,"results":"15","hashOfConfig":"11"},{"size":998,"mtime":1649025145147,"results":"16","hashOfConfig":"11"},{"size":863,"mtime":1648942130699,"results":"17","hashOfConfig":"11"},{"size":1053,"mtime":1648951724596,"results":"18","hashOfConfig":"11"},{"size":7513,"mtime":1649026958967,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1uwk7oo",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"/Users/sonnyparlin/Github/pr-blockchain-c/dashboard/src/index.js",[],[],["53","54"],"/Users/sonnyparlin/Github/pr-blockchain-c/dashboard/src/App.js",[],[],["55","56"],"/Users/sonnyparlin/Github/pr-blockchain-c/dashboard/src/reportWebVitals.js",[],[],["57","58"],"/Users/sonnyparlin/Github/pr-blockchain-c/dashboard/src/News.js",[],[],"/Users/sonnyparlin/Github/pr-blockchain-c/dashboard/src/Console.js",[],[],"/Users/sonnyparlin/Github/pr-blockchain-c/dashboard/src/Wallet.js",[],[],"/Users/sonnyparlin/Github/pr-blockchain-c/dashboard/src/Stake.js",[],[],"/Users/sonnyparlin/Github/pr-blockchain-c/dashboard/src/Transactions.js",["59"],[],"import React from 'react';\n\nclass Transactions extends React.Component {\n\n    constructor(props) { \n        super(props);\n        this.state = { transactions: [] };\n    }\n\n    componentDidMount() {\n        this.getWalletAmount();\n    }\n\n    getWalletAmount() {\n\n        fetch(\"http://127.0.0.1:8001/nodetransactions\")\n            .then(response => response.json())\n            .then((jsonData) => {\n                // jsonData is parsed json object received from url\n                this.state.transactions.push( jsonData );\n                this.state.transactions = this.state.transactions[0]\n            })\n            .catch((error) => {\n                // handle your errors here\n                console.error(error);\n            });\n    }\n\n    render() { \n        return (\n            <pre>\n                <small>\n                    <ul>\n                        {this.state.transactions.map(item => <li key={item}>{item}</li>)}\n                    </ul>\n                </small>\n            </pre>\n        );\n    }\n}\n\nexport default Transactions;",["60","61"],"/Users/sonnyparlin/Github/pr-blockchain-c/dashboard/src/BuySellTransfer.js",["62"],[],"import React, { useState } from 'react';\nimport Wallet from './Wallet';\n\nconst BuySellTransfer = (props) => {\n\n    const [hidden, setHidden] = useState(false);\n    const [hidden1, setHidden1] = useState(false);\n    const [hidden2, setHidden2] = useState(false);\n    const [hidden3, setHidden3] = useState(false);\n    const [hiddenSell, setHiddenSell] = useState(false);\n    const [hiddenBuy, setHiddenBuy] = useState(false);\n    const [hiddenCancelBuy, setHiddenCancelBuy] = useState(false);\n    const [hiddenCancelSell, setHiddenCancelSell] = useState(false);\n    const [hiddenTransfer, setHiddenTransfer] = useState(false);\n    const [hiddenCancelTransfer, setHiddenCancelTransfer] = useState(false);\n    const [hiddenStake, setHiddenStake] = useState(false);\n    const [hiddenCancelStake, setHiddenCancelStake] = useState(false);\n\n    const handleBuyClick = async () => {\n\n        const receiver = props.nodeaddress;\n        const amount = document.getElementById('tramount').value;\n\n        console.log(\"address is \" + props.nodeaddress);\n        console.log(amount);\n        var jsonData = {\n            \"transaction\":\n            {\n                \"sender\": \"pv1403d478bfc4949c9c68af53bbaf8deb58c4eac\",\n                \"receiver\": receiver,\n                \"amount\": parseInt(amount),\n                \"type\": \"EXCHANGE\"\n            }\n        }\n      \n        // Send data to the backend via POST\n        const response = await fetch('http://127.0.0.1:8001/transact', {\n            method: 'POST', \n            mode: 'cors', \n            body: JSON.stringify(jsonData)\n        })\n\n        return response.json();\n    }\n\n    const handleStakeClick = async () => {\n\n        const receiver = props.nodeaddress;\n        const amount = document.getElementById('stamount').value;\n\n        console.log(\"address is \" + props.nodeaddress);\n        console.log(amount);\n        var jsonData = {\n            \"transaction\":\n            {\n                \"sender\": receiver,\n                \"receiver\": receiver,\n                \"amount\": parseInt(amount),\n                \"type\": \"STAKE\"\n            }\n        }\n      \n        // Send data to the backend via POST\n        const response = await fetch('http://127.0.0.1:8001/transact', {\n            method: 'POST', \n            mode: 'cors', \n            body: JSON.stringify(jsonData)\n        })\n\n        return response.json();\n    }\n  \n    return (\n    <div>\n        <div className=\"transactionSpace\">\n        \n            <div className=\"buyForm\" hidden={!hiddenBuy}>\n                <div className=\"fleft\">\n                <input type=\"text\" className=\"form-control-plaintext\" id=\"tramount\" placeholder=\"amount\" />\n                </div>\n            <button type=\"submit\" className=\"btn btn-primary mb-2\" onClick={() => \n                {\n                    handleBuyClick();\n                    window.location.reload(false);\n                }\n            }>\n                Buy\n            </button>\n            </div>\n\n            <div className=\"sellForm\" hidden={!hiddenSell}>\n                <div className=\"fleft\">\n                <input type=\"text\" className=\"form-control-plaintext\" id=\"amount\" placeholder=\"amount\" />\n                </div>\n            <button type=\"submit\" className=\"btn btn-primary mb-2\">Sell</button>\n            </div>\n\n            <div className=\"transferForm\" hidden={!hiddenTransfer}>\n                <div className=\"fleft\">\n                <input type=\"text\" className=\"form-control-plaintext fleft\" id=\"address\" placeholder=\"address\" />\n                <input type=\"text\" className=\"form-control-plaintext\" id=\"amount\" placeholder=\"amount\" />\n                </div>\n            <button type=\"submit\" className=\"btn btn-primary mb-2\">Transfer</button>\n            </div>\n\n            <div className=\"stakeForm\" hidden={!hiddenStake}>\n                <div className=\"fleft\">\n                <input type=\"text\" className=\"form-control-plaintext\" id=\"stamount\" placeholder=\"amount\" />\n                </div>\n            <button type=\"submit\" className=\"btn btn-primary mb-2\" onClick={() => \n                {\n                    handleStakeClick();\n                    window.location.reload(false);\n                }\n            }>\n                Stake</button>\n            </div>\n\n        </div>\n        <table>\n        <tbody>\n        <tr>\n        <td>\n        <button className=\"btn btn-primary buy\" hidden={hidden} onClick={() => {\n            setHidden(!hidden); \n            setHidden1(!hidden1);\n            setHidden2(!hidden2);\n            setHidden3(!hidden3);\n            setHiddenBuy(!hiddenBuy);\n            setHiddenCancelBuy(!hiddenCancelBuy);\n        }}>\n            Buy\n        </button>\n        </td>\n        <td>\n        <button className=\"btn btn-primary\" hidden={hidden1} onClick={() => {\n            setHidden(!hidden); \n            setHidden1(!hidden1);\n            setHidden2(!hidden2);\n            setHidden3(!hidden3);\n            setHiddenSell(!hiddenSell);\n            setHiddenCancelSell(!hiddenCancelSell);\n        }}>\n            Sell\n        </button>\n        </td>\n        <td>\n        <button className=\"btn btn-primary\" hidden={hidden2} onClick={() => {\n            setHidden(!hidden); \n            setHidden1(!hidden1);\n            setHidden2(!hidden2);\n            setHidden3(!hidden3);\n            setHiddenTransfer(!hiddenTransfer);\n            setHiddenCancelTransfer(!hiddenCancelTransfer);\n        }}>\n            Transfer\n        </button>\n        </td>\n        <td width=\"240px\" align=\"right\">\n        <button className=\"btn btn-primary\" hidden={hidden3} onClick={() => {\n            setHidden(!hidden); \n            setHidden1(!hidden1);\n            setHidden2(!hidden2);\n            setHidden3(!hidden3);\n            setHiddenStake(!hiddenStake);\n            setHiddenCancelStake(!hiddenCancelStake);\n        }}>\n            Stake\n        </button>\n\n        </td>\n        </tr>\n        </tbody>\n        </table>\n\n\n        <button className=\"btn btn-primary fright\" hidden={!hiddenCancelBuy} onClick={() => {\n            setHidden(!hidden);\n            setHidden1(!hidden1);\n            setHidden2(!hidden2);\n            setHidden3(!hidden3);\n            setHiddenBuy(!hiddenBuy);\n            setHiddenCancelBuy(!hiddenCancelBuy);\n        }}>\n            Cancel\n        </button>\n\n        <button className=\"btn btn-primary fright\" hidden={!hiddenCancelSell} onClick={() => {\n            setHidden(!hidden);\n            setHidden1(!hidden1);\n            setHidden2(!hidden2);\n            setHidden3(!hidden3);\n            setHiddenSell(!hiddenSell);\n            setHiddenCancelSell(!hiddenCancelSell);\n\n        }}>\n            Cancel\n        </button>\n\n        <button className=\"btn btn-primary fright\" hidden={!hiddenCancelTransfer} onClick={() => {\n            setHidden(!hidden);\n            setHidden1(!hidden1);\n            setHidden2(!hidden2);\n            setHidden3(!hidden3);\n            setHiddenTransfer(!hiddenTransfer);\n            setHiddenCancelTransfer(!hiddenCancelTransfer);\n\n        }}>\n            Cancel\n        </button>\n\n        <button className=\"btn btn-primary fright\" hidden={!hiddenCancelStake} onClick={() => {\n            setHidden(!hidden);\n            setHidden1(!hidden1);\n            setHidden2(!hidden2);\n            setHidden3(!hidden3);\n            setHiddenStake(!hiddenStake);\n            setHiddenCancelStake(!hiddenCancelStake);\n\n        }}>\n            Cancel\n        </button>\n\n\n    </div>\n    );\n  \n  }\n  \n  export default BuySellTransfer;",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"63","replacedBy":"67"},{"ruleId":"65","replacedBy":"68"},{"ruleId":"63","replacedBy":"69"},{"ruleId":"65","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":21,"column":17,"nodeType":"73","messageId":"74","endLine":21,"endColumn":27},{"ruleId":"63","replacedBy":"75"},{"ruleId":"65","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":14},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],["81"],["82"],["81"],["82"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation",["81"],["82"],"no-unused-vars","'Wallet' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]